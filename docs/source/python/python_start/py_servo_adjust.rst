サーボ・モーターの調整
===============================

サーボ・モーターの動作角度範囲は-90 ～ 90°ですが、工場出荷時の軸の向きはバラバラです。とは言え大体はセンターになっております。センター以外の角度でそのまま組み立てるとロボットが動き出した際に変な動作をしたり、最悪の場合サーボの動作が正常に行えず壊れることがあります。

ここではすべてのサーボ角度を0°（センター）に設定し、左右どちらの方向に回しても問題が発生しない様に取り付けます。

組み立てた後に :ref:`py_calibrate` を実行してサーボのキャリブレーションを行うことをお勧めします。 サーボの角度は組み立て時などに若干ズレてしまうため、組み立て後にさらにキャリブレーションを行うことで完全な状態に調整することができます。通常キャリブレーション角度（ずれの修正角度）は-5 〜 5°の範囲です。

もしキャリブレーションの角度が大きすぎた場合はこのセクションに戻ってサーボ角度を0°に設定し直して、もう一度手順書に従って車を再組み立てする必要があります。

事前に最新版のEzBlock OSをマイクロSDにインストールします。インストールが終わったらRaspberry piにSDカードをセットします。

#. サーボを確実に0°に設定するために、最初にサーボのギヤにサーボのアームをセットしてゆっくり左右どちらかに動かしてやります。

    .. image:: img/servo_arm.png

#. 組み立て図に従ってバッテリーをバッテリーケースにセットしてから、ケースからの配線をロボット・ハットの該当コネクタに接続し、電源スイッチをオンにします。１～２分待つと起動音が鳴ってRspberry piの起動が終わったことが確認できます。

    .. image:: img/slide_to_power.png

#. ``example/`` フォルダにある ``servo_zeroing.py`` を実行します。

    .. raw:: html

        <run></run>

    .. code-block::

        cd /home/pi/picar-x/example
        sudo python3 servo_zeroing.py


    .. note::
        もしエラーが発生した場合はRaspberry PiのI2Cポートを再度有効にしてみてください。:ref:`i2c_config` を参照してください。

#. 調整するサーボのケーブルを図に従ってP11（サーボモーター１１番）のピンに差し込みます。

    .. image:: img/pin11_connect.png

#. この時にサーボのアームが動いて0°に戻ります。もし0°にならない場合はリセットボタン（ **RST** ボタン）を押してロボット・ハットをリセットしてください。なお、出荷時のギアの位置が0度からずれていた場合はアームの位置はずれた状態でセットされているので、サーボの配線を抜いてからアームを付け直し、もう一度左右にずらしてから同じように調整してみてください。それで正常に0°になるのであればそれできちんとキャリブレーションされています。

    これで組み立て作業を続行できます。

.. note::

    * サーボに該当のアームを取り付けてねじで締めるまでサーボのケーブルは抜かないでください。（組立図面の１８，１９，２２を参照）各図のサーボ1つずつ順番にこの作業を行います。
    * サーボの電源が入っているとき（ケーブルがピンに繋がっているとき）はサーボのアームを動かさないようにしてください。壊れる可能性があります。サーボのギアの歯とアームの歯の位置によっては少し曲がって付く事がありますが±５°以内であれば後ほど調整可能です。
    * 各サーボの組み立て前にサーボの配線をP11のピンに接続してサーボの角度を0°に設定する必要があります。


